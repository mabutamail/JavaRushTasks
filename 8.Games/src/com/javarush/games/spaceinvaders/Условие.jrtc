taskKey="com.javarush.games.spaceinvaders.part04"\n\nИгра Space Invaders (4/34)

Для отображения звезды можно использовать любой символ из стандарта Юникод. Его будем хранить в поле STAR_SIGN класса Star.
Создадим метод draw(Game) для отображения звезд на игровом поле. У объекта типа Game в этом методе будем вызывать setCellValueEx,
передавая в него координаты звезды, цвет фона, ее символ, цвет символа и его размер. Обрати внимание, что
тип координат x и y — double, поэтому при вызове метода setCellValueEx их нужно привести к типу int.
Теперь добавим звезды в игру. Для этого создадим список и метод, который будет заполнять этот список новыми звездами.
Не забудь вызвать метод отрисовки звезд в нужном месте.


Требования:
1.	В классе Star должно существовать приватное статическое final поле String STAR_SIGN, инициализированное при объявлении. Например, можно использовать UTF-8 символ звезды &quot;\u2605&quot;.
2.	В классе Star должен существовать публичный метод void draw(Game).
3.	В методе draw(Game) у объекта типа Game должен быть вызван метод setCellValueEx(int, int, Color, String, Color, int) с параметрами: x, y, Color.NONE, STAR_SIGN, &lt;цвет звезды&gt;, 100. (&lt;цвет звезды&gt; используй какой тебе нравиться, например, Color.WHITE).
4.	В классе SpaceInvadersGame должно существовать приватное поле stars типа List&lt;Star&gt;.
5.	В классе SpaceInvadersGame должен существовать приватный метод void createStars().
6.	Поле stars должно быть проинициализировано в методе createStars() новым объектом типа ArrayList&lt;Star&gt;.
7.	В методе createStars() необходимо добавить 8 новых объектов типа Star в список stars. Координаты в пределах игрового поля для каждой звезды выбери сам.
8.	В методе createGame() метод createStars() должен вызываться до drawScene().
9.	В методе drawField() после отрисовки поля у каждого объекта из списка stars необходимо вызвать метод draw(Game). В качестве параметра передай в метод &quot;this&quot;.
10.	В классе Star должен быть импорт всего содержимого пакета com.javarush.engine.cell.


Игра Space Invaders (3/34)

Давай реализуем метод drawField() — закрасим игровое поле одним цветом.
Поскольку в игре будут разные игровые объекты, вынесем их общие характеристики, такие как координаты положения на игровом поле,
в отдельный родительский класс GameObject.
Первыми игровыми объектами будут звезды. Для их описания создадим класс Star, который унаследуем от класса GameObject.



Игра Space Invaders (2/34)

Все игровые действия происходят в космосе. Для его отрисовки объявим метод drawField().
Создавать все элементы игры будем в методе createGame(), а отрисовывать их — в методе drawScene().
Все объекты создаются при запуске игры, поэтому в методе initialize() вызовем
setScreenSize(int, int), а после него — метод createGame().



Игра Space Invaders (1/34)

Сегодня мы предлагаем тебе написать увлекательную игру — Space Invaders. Как всегда, начнем с правил.

Цель игры: игроку нужно уничтожить все корабли инопланетян.

Игрок управляет лазерной пушкой, передвигая её горизонтально, в нижней части экрана.
У игрока есть бесконечное количество "патронов". Попадая в инопланетный корабль, игрок убивает его и получает за это очки.
На старте игры корабли инопланетян находятся в верхней части экрана. Они движутся по горизонтали и, достигая края
игрового поля, опускаются на ряд ниже, постепенно приближаясь к игроку.
По мере того, как кораблей инопланетян становится меньше, их скорость движения увеличивается.
После разгрома всех врагов игроку засчитывается победа.
Инопланетяне пытаются уничтожить пушку, стреляя по ней. Если инопланетяне попадают в пушку, игрок терпит поражение.
Если хотя бы один из противников достигает нижней части экрана, происходит инопланетный захват, и игра также заканчивается.
Выше рядов с кораблями противника находится "босс". Если игрок уничтожит его, он получит бонусные очки.

Итак, начнем. Для начала нам понадобится класс игры SpaceInvadersGame, который наследует класс Game. Он содержит методы,
которые помогут нам в реализации игры. Теперь зададим игровое поле. Для запуска игры нам необходимо переопределить
метод initialize(), в котором, в свою очередь, нужно вызвать метод setScreenSize(int, int).
Этот метод задает ширину и высоту игрового поля, которые он принимает в качестве параметров. Их будем хранить в переменных.
Чтобы успешно справиться с задачей Moon Lander, рекомендуем прочесть статью про раздел "Игры". В ней ты найдешь информацию,
которая будет полезна при написании игр.



